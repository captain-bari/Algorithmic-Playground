{"version":3,"sources":["logo.svg","comp/nav.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Node","value","this","left","right","nav","props","clickNodes","cref","current","addEventListener","createNodes","removeEventListener","createWalls","document","getElementById","style","color","clickewalls","canvas","setState","nodeX","state","concat","cordX","nodeY","cordY","draw","getContext","fillStyle","beginPath","arc","Math","PI","fill","wallX","wallY","length","i","moveTo","lineTo","stroke","resetcanvas","clearRect","width","height","testrun","node","stack","push","console","log","collision","createart","a","delay","ms","Promise","res","setTimeout","oldnodeX","oldnodeY","shortest","shortestindex","strokeStyle","distance","hypot","speed","ind","p1x","p1y","p2x","p2y","p3x","p3y","x1","y1","x2","y2","sx","sy","x3","y3","x4","y4","f1","RotationDirection","f2","f3","f4","intersect","containsSegment","Navbar","collapseOnSelect","expand","bg","variant","Brand","Toggle","aria-controls","Collapse","id","Nav","className","Link","onClick","NavDropdown","title","Item","Component","App","canvasRef","React","useRef","conextRef","useState","setX","setY","useEffect","backgroundColor","context","ref","onMouseDown","e","nativeEvent","offsetX","offsetY","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d9b39740.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport NavDropdown from 'react-bootstrap/NavDropdown'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\n\r\nfunction Node(value) {\r\n  this.value = value;\r\n  this.left = null;\r\n  this.right = null;\r\n}\r\n\r\n\r\nclass nav extends Component {\r\n  \r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {nodeX : [] , nodeY :[] , wallX : [] , wallY :[] , speed : 1000 }\r\n  }\r\n  \r\n  RotationDirection(p1x, p1y, p2x, p2y, p3x, p3y) {\r\n    if (((p3y - p1y) * (p2x - p1x)) > ((p2y - p1y) * (p3x - p1x)))\r\n      return 1;\r\n    else if (((p3y - p1y) * (p2x - p1x)) == ((p2y - p1y) * (p3x - p1x)))\r\n      return 0;\r\n    \r\n    return -1;\r\n  }\r\n  \r\n  containsSegment(x1, y1, x2, y2, sx, sy) {\r\n    if (x1 < x2 && x1 < sx && sx < x2) return true;\r\n    else if (x2 < x1 && x2 < sx && sx < x1) return true;\r\n    else if (y1 < y2 && y1 < sy && sy < y2) return true;\r\n    else if (y2 < y1 && y2 < sy && sy < y1) return true;\r\n    else if (x1 == sx && y1 == sy || x2 == sx && y2 == sy) return true;\r\n    return false;\r\n  }\r\n  \r\n  collision(x1, y1, x2, y2, x3, y3, x4, y4) {\r\n    var f1 = this.RotationDirection(x1, y1, x2, y2, x4, y4);\r\n    var f2 = this.RotationDirection(x1, y1, x2, y2, x3, y3);\r\n    var f3 = this.RotationDirection(x1, y1, x3, y3, x4, y4);\r\n    var f4 = this.RotationDirection(x2, y2, x3, y3, x4, y4);\r\n    \r\n    // If the faces rotate opposite directions, they intersect.\r\n    var intersect = f1 != f2 && f3 != f4;\r\n    \r\n    // If the segments are on the same line, we have to check for overlap.\r\n    if (f1 == 0 && f2 == 0 && f3 == 0 && f4 == 0) {\r\n      intersect = this.containsSegment(x1, y1, x2, y2, x3, y3) || this.containsSegment(x1, y1, x2, y2, x4, y4) ||\r\n      this.containsSegment(x3, y3, x4, y4, x1, y1) || this.containsSegment(x3, y3, x4, y4, x2, y2);\r\n    }\r\n    \r\n    return intersect;\r\n  }\r\n\r\n\r\n  clickNodes = () => {\r\n    this.props.cref.current.addEventListener('click', this.createNodes )\r\n    this.props.cref.current.removeEventListener('click',this.createWalls)\r\n    document.getElementById(\"Nodes\").style.color= `#00ff11`;\r\n    document.getElementById(\"Walls\").style.color= `#c7c7c7`;\r\n    \r\n\r\n    \r\n}\r\n  clickewalls = () => {\r\n    this.props.cref.current.addEventListener('click', this.createWalls )\r\n    this.props.cref.current.removeEventListener('click',this.createNodes)\r\n    document.getElementById(\"Nodes\").style.color= `#c7c7c7`;\r\n    document.getElementById(\"Walls\").style.color= `#00ff11`;\r\n\r\n  }\r\n    createNodes = () => {\r\n        const canvas = this.props.cref.current;\r\n        this.setState({nodeX : this.state.nodeX.concat(this.props.cordX),\r\n                        nodeY : this.state.nodeY.concat(this.props.cordY)});\r\n        var draw = canvas.getContext(\"2d\");\r\n        draw.fillStyle = `#eae7dc`;\r\n        draw.beginPath();\r\n        draw.arc(this.props.cordX ,this.props.cordY,5 ,0 ,Math.PI*2, true )\r\n        draw.fill();\r\n        \r\n        \r\n        //console.log(`nodes ${this.props.cordX} ${this.props.cordY} ${this.state.nodeX} ${this.state.nodeY}`);\r\n    \r\n    }\r\n    createWalls = () => {\r\n        const canvas = this.props.cref.current;\r\n        this.setState({wallX : this.state.wallX.concat(this.props.cordX),\r\n          wallY : this.state.wallY.concat(this.props.cordY)});\r\n\r\n          var draw = canvas.getContext(\"2d\");\r\n          draw.fillStyle = `#a30e0e`;\r\n          draw.beginPath();\r\n          draw.arc(this.props.cordX ,this.props.cordY,5 ,0 ,Math.PI*2, true )\r\n          draw.fill();\r\n\r\n          if(this.state.wallX.length%2 == 0){\r\n            for (var i = 0; i < this.state.wallX.length-1; i=i+2) {\r\n              var draw = canvas.getContext(\"2d\");\r\n              draw.fillStyle = `#a30e0e`;\r\n              draw.beginPath();\r\n              draw.moveTo(this.state.wallX[i], this.state.wallY[i]);\r\n              draw.lineTo(this.state.wallX[i+1], this.state.wallY[i+1]);\r\n              draw.stroke();\r\n            }\r\n          }\r\n        \r\n        \r\n       // console.log(`walls ${this.props.cordX} ${this.props.cordY} ${this.state.wallX} ${this.state.wallY} ${this.state.wallY.length}`);\r\n    \r\n    }\r\n    resetcanvas = () => {\r\n      const canvas = this.props.cref.current;\r\n      var draw = canvas.getContext(\"2d\");\r\n      draw.clearRect(0, 0, canvas.width, canvas.height);\r\n      this.state.wallX.length=0\r\n      this.state.wallY.length=0\r\n      this.state.nodeX.length=0\r\n      this.state.nodeY.length=0\r\n\r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n\r\n    testrun = () => {\r\n      let node = new Node(10);\r\n      var stack = [];\r\n      stack.push(node);\r\n      console.log(stack);\r\n      let nodeX = [...this.state.nodeX]\r\n      let nodeY = [...this.state.nodeY]\r\n      let wallX = [...this.state.wallX]\r\n      let wallY = [...this.state.wallY]\r\n      console.log(this.collision(nodeX[1] , nodeY[1] , nodeX[0], nodeX[0] ,wallX[0] , wallY[0],wallX[1] , wallY[1]));\r\n    }\r\n/*                                           -----Algorithms start-----                                          */\r\n\r\n\r\n\r\ncreateart = async() => {\r\n\r\n  const delay = ms => new Promise(res => setTimeout(res, ms));\r\n\r\n  const canvas = this.props.cref.current;\r\n  var draw = canvas.getContext(\"2d\");\r\n\r\n  let nodeX = [...this.state.nodeX]\r\n  let nodeY = [...this.state.nodeY]\r\n  let wallX = [...this.state.wallX]\r\n  let wallY = [...this.state.wallY]\r\n  let oldnodeX = [...this.state.nodeX]\r\n  let oldnodeY = [...this.state.nodeY]\r\n  var shortest = 1000000;\r\n  var shortestindex = 0;\r\n\r\n  while(nodeY.length != 1) {\r\n  for (var i = 1; i < nodeX.length; i=i+1) {\r\n\r\n   if(this.collision(nodeX[i] , nodeY[i] , nodeX[0], nodeX[0] ,wallX[0] , wallY[0],wallX[1] , wallY[1]))\r\n        continue;\r\n   \r\n    draw.strokeStyle = `#df6748`;\r\n              draw.beginPath();\r\n              draw.moveTo(nodeX[0],nodeY[0]);\r\n              draw.lineTo(nodeX[i],nodeY[i]);\r\n              draw.stroke();\r\n              \r\n    \r\n    var distance = Math.hypot(nodeX[i]-nodeX[0], nodeY[i]-nodeY[0]);\r\n    \r\n\r\n    if(distance<shortest)\r\n    {\r\n        shortest=distance\r\n        shortestindex=i;\r\n    }\r\n              \r\n  await delay(this.state.speed);\r\n\r\n          \r\n  }\r\n  if(this.collision(oldnodeX[0],oldnodeY[0] , oldnodeX[shortestindex],oldnodeY[shortestindex] ,wallX[0] , wallY[0],wallX[1] , wallY[1]))\r\n  continue;\r\n\r\n              draw.strokeStyle = `#000000`;\r\n              draw.beginPath();\r\n              draw.moveTo(oldnodeX[0],oldnodeY[0]);\r\n              draw.lineTo(oldnodeX[shortestindex],oldnodeY[shortestindex]);\r\n              draw.stroke();\r\n      //console.log(shortestindex);\r\n      \r\n      nodeX[0]=oldnodeX[shortestindex]; nodeY[0] = oldnodeY[shortestindex];\r\n      \r\n      var ind = 1;\r\n      for (var i = 1; i < nodeX.length; i=i+1) {\r\n        if(i == shortestindex)\r\n              continue;\r\n        if(this.collision(oldnodeX[0],oldnodeY[0] , oldnodeX[i],oldnodeY[i] ,wallX[0] , wallY[0],wallX[1] , wallY[1]))\r\n              continue;\r\n              draw.strokeStyle = `#ff9595`;\r\n              draw.beginPath();\r\n              draw.moveTo(oldnodeX[0],oldnodeY[0]);\r\n              draw.lineTo(oldnodeX[i],oldnodeY[i]);\r\n              draw.stroke();\r\n      nodeX[ind]=oldnodeX[i]\r\n      nodeY[ind]=oldnodeY[i]\r\n      ind++;\r\n      \r\n      }\r\n      \r\n      nodeX.length=nodeX.length-1; nodeY.length=nodeY.length-1;\r\n      oldnodeX = [...nodeX]\r\n      oldnodeY = [...nodeY]\r\n      shortest = 1000000;\r\n  }\r\n      \r\n}\r\n\r\n\r\n\r\n\r\n\r\n/*                                           -----Algorithms end-----                                           */\r\n    render() {\r\n        return (\r\n        <div>\r\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n  <Navbar.Brand >Welcome to Algorithm Playground</Navbar.Brand>\r\n  <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n  <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n    <Nav className=\"mr-auto\">\r\n      <Nav.Link onClick={this.clickNodes}><span id=\"Nodes\">Create Nodes</span></Nav.Link>\r\n      <Nav.Link onClick={this.clickewalls}><span id=\"Walls\">Create Walls</span></Nav.Link>\r\n      \r\n      <NavDropdown title=\"Speed\" id=\"collasible-nav-dropdown\">\r\n      <NavDropdown.Item onClick={() => this.setState({speed : 10}) }>0.01 Second</NavDropdown.Item>\r\n      <NavDropdown.Item onClick={() => this.setState({speed : 50}) }>0.05 Second</NavDropdown.Item>\r\n      <NavDropdown.Item onClick={() => this.setState({speed : 100}) }>0.1 Second</NavDropdown.Item>\r\n        <NavDropdown.Item onClick={() => this.setState({speed : 200}) }>0.2 Second</NavDropdown.Item>\r\n        <NavDropdown.Item onClick={() =>  this.setState({speed : 500})}>0.5 Second</NavDropdown.Item>\r\n        <NavDropdown.Item onClick={() =>  this.setState({speed : 1000})}>1 Second</NavDropdown.Item>\r\n        \r\n        <NavDropdown.Item onClick={() =>  this.setState({speed : 2000})}>2 Second</NavDropdown.Item>\r\n      </NavDropdown>\r\n\r\n      <NavDropdown title=\"Select Algorithm\" id=\"collasible-nav-dropdown\">\r\n        <NavDropdown.Item onClick={this.createart}>Create Art</NavDropdown.Item>\r\n        <NavDropdown.Item >A Star Algo</NavDropdown.Item>\r\n        <NavDropdown.Item >Depth First Algo</NavDropdown.Item>\r\n        <NavDropdown.Item >Dijkstra Algo</NavDropdown.Item>\r\n        <NavDropdown.Item onClick = {this.testrun}>Debugging</NavDropdown.Item>\r\n      </NavDropdown>\r\n      \r\n\r\n      <Nav.Link onClick={this.resetcanvas}>Reset</Nav.Link>\r\n    </Nav>\r\n    \r\n  </Navbar.Collapse>\r\n</Navbar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default nav;","import React , {components, useEffect,useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Nav from './comp/nav'\n\n\n\nfunction App() {\n\n  const canvasRef = React.useRef(null)\n  const conextRef = React.useRef(null)\n  \n  const [cordX , setX] = useState(0)\n  const [cordY , setY] = useState(0)\n\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    canvas.width = 1000;\n    canvas.height = 500;\n\n    //canvas.style.width = `${window.innerWidth}px`;\n    //canvas.style.height = `${window.innerHeight}px`;\n    canvas.style.width = `1000px`;\n    canvas.style.height = `500px`;\n\n    canvas.style.backgroundColor = `#ff9595`;\n\n    const context = canvas.getContext(\"2d\");\n    conextRef.current = context;\n\n  }, [])\n\n  const clickfun = (e) => {\n    const {offsetX , offsetY} = e.nativeEvent;\n    setX(offsetX);\n    setY(offsetY);\n  \n    //console.log(`${offsetX} ${cordX} ${cordX} `);\n           /* const canvas = canvasRef.current;\n            let rect = canvas.getBoundingClientRect(); \n            let x = e.clientX - rect.left; \n            let y = e.clientY - rect.top;\n            setX(x);\n            setY(y); */\n  }\n\n \n  \n\n  \n  return (\n    <div className=\"App\">\n      <Nav cref= {canvasRef} cordX={cordX} cordY={cordY}/>\n   <br></br>\n   <canvas ref={canvasRef} onMouseDown={clickfun} id=\"canvas\"/>\n\n\n        \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}